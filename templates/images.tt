<#@ template cleanws="true" #>
<div class="row">
	<#
	use std::fs;
	// List images
	let files = match fs::read_dir(&format!("Bilder{}", self.name)) {
		Ok(files) => files,
		Err(error) => { #>
			Fehler: Bilder konnten nicht gefunden werden.
			<# error!("Cannot read pictures in {} ({:?})", self.name, error);
			return Ok(());
		}
	};
	let mut list = Vec::new();
	for file in files {
		let file = match file {
			Ok(file) => file,
			Err(error) => {
				error!("Cannot read picture from {} ({:?})", self.name, error);
				continue;
			}
		};
		let path = file.path();
		if !path.is_file() {
			continue;
		}
		match path.file_name() {
			None => warn!("Cannot get filename of {:?} in {}", path, self.name),
			Some(name) => {
				match name.to_str() {
					None => warn!("Filename {:?} in {} is not valid unicode",
						path, self.name),
					Some(name) => {
						if name != ".gitignore" {
							let created = match file.metadata().and_then(|m| m.created()) {
								Ok(time) => time,
								Err(error) => {
									error!("Cannot read created time of picture {} / {} ({:?})", self.name, name, error);
									std::time::SystemTime::now()
								}
							};
							list.push((name.to_string(), created));
						}
					}
				}
			}
		}
	}

	// Sort the newest file first
	list.sort_unstable_by(|a, b| a.1.cmp(&b.1).reverse());
	for file in &list {
		let name = &file.0;
		let lower_name = name.to_lowercase();
		if lower_name.ends_with(".jpg") || lower_name.ends_with(".jpeg") || lower_name.ends_with(".png") { #>
	<a href="static/<#= name #>" data-toggle="lightbox" data-gallery="image-gallery" class="col-lg-3 col-md-4 col-6 my-3">
		<img data-src="static/thumbs/<#= name #>" class="img-fluid card lozad">
	</a>
	<# } else { #>
	<a href="static/<#= name #>" target="_blank" class="col-lg-3 col-md-4 col-6 my-3">
		<div class="img-fluid card" style="text-align: center;">
			<img src="/static/img/file.svg" style="height: 10em;">
			<#= crate::escape_html_body(name) #>
		</div>
	</a>
		<# }
	} #>
</div>
<script>
	const observer = lozad();
	observer.observe();
</script>
